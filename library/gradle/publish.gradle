import org.gradle.execution.plan.Node

/**
 * Provides the functionality to upload to local maven repositories (for testing
 * purposes) and to push to jcenter for official releases
 */
apply plugin: 'maven-publish'

task androidJavaDoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  options.encoding "UTF-8"
  options.charSet 'UTF-8'
  options.author true
  options.version true
  failOnError false
}

task androidJavaDocJar(type: Jar, dependsOn: androidJavaDoc) {
  archiveClassifier.set('javadoc')
  from androidJavaDoc.destinationDir
}

task androidSourcesJar(type: Jar) {
  archiveClassifier.set('sources')
  from android.sourceSets.main.java.srcDirs
}

/**
 * Bintray Deploy
 * `$ ./gradlew clean library:assembleRelease androidJavaDocJar androidSourcesJar generatePomFileForJcenterPublication bintrayUpload`
 */
publishing {
  publications {
    jcenter(MavenPublication) {
      groupId project.getLibraryInfo().groupId
      artifactId project.getLibraryInfo().artifactId
      version project.getLibraryInfo().versionName

      artifact bundleReleaseAar
      artifact androidJavaDocJar
      artifact androidSourcesJar

      // The generated POM doesn't include dependencies when building Android artifacts, so we manually
      // add the dependencies to the POM here
      pom.withXml {
        def rootNode = asNode().appendNode('dependencies')

        /**
         * Helper method to add dependencies to the POM node
         */
        ext.addDependency = { Node dependenciesNode, Dependency dependency, String dependencyScope ->
          // We don't add incomplete dependencies
          if (dependency.name == null ||
              dependency.name == 'unspecified' ||
              dependency.group == null ||
              dependency.version == null) {
            return
          }

          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', dependency.group)
          dependencyNode.appendNode('artifactId', dependency.name)
          dependencyNode.appendNode('version', dependency.version)
          dependencyNode.appendNode('scope', dependencyScope)
        }

        // Iterate over the implementation dependencies, adding a <dependency> node for each
        configurations.implementation.dependencies.each {
          addDependency(rootNode, it, "runtime")
        }

        // Iterate over the api dependencies, adding a <dependency> node for each
        configurations.api.dependencies.each {
          addDependency(rootNode, it, "compile")
        }
      }
    }
  }
}

/**
 * Configure the Bintray repository values
 */
//bintray {
//    user = System.getenv('BINTRAY_USER')
//    key = System.getenv('BINTRAY_KEY')
//    setPublications('jcenter')
//
//    pkg {
//        userOrg = 'brianwernick'
//        repo = 'maven'
//        name = 'PlaylistCore'
//        licenses = ['Apache-2.0']
//        desc = ''
//        vcsUrl = 'https://github.com/brianwernick/PlaylistCore'
//        issueTrackerUrl = 'https://github.com/brianwernick/PlaylistCore/issues'
//        websiteUrl = 'http://devbrackets.com/dev/libs/playlistcore.html'
//        githubRepo = 'https://github.com/brianwernick/PlaylistCore'
//
//        version {
//            name = project.getLibraryInfo().versionName
//            released = new Date()
//        }
//    }
//}